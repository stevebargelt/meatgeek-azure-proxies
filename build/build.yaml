# Builds the MeatGeek API proxy resources

name: $(BuildID)
steps:
  # Zip the `proxies` folder
  - task: ArchiveFiles@2
    displayName: Zip Proxy Configuration
    inputs:
      rootFolderOrFile: proxies
      includeRootFolder: false
      archiveFile: $(Build.ArtifactStagingDirectory)/proxies.zip

  # Publish the zipped `proxies` folder as an artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish Proxy Configuration
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/proxies.zip
      ArtifactName: proxies
      publishLocation: Container

  # Publish the 'deploy` folder as an artifact
  - task: PublishBuildArtifacts@1
    displayName: Publish Deployment Scripts
    inputs:
      PathtoPublish: deploy
      ArtifactName: deploy
      publishLocation: Container

  - task: PowerShell@2
    inputs:
      filePath: "$(System.DefaultWorkingDirectory)/deploy/CreateUniqueResourceNameSuffix.ps1"

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "Visual Studio Enterprise(2394ff5d-4d73-4134-a00f-2385754aeeb5)"
      subscriptionId: "2394ff5d-4d73-4134-a00f-2385754aeeb5"
      action: "Create Or Update Resource Group"
      resourceGroupName: "MeatGeek-Proxy"
      location: "West US 2"
      templateLocation: "Linked artifact"
      csmFile: "$(System.DefaultWorkingDirectory)/deploy/template.json"
      overrideParameters: "-uniqueResourceNameSuffix $(UniqueResourceNameSuffix) -sessionsMicroserviceApiAppName {sessions-api-function-app-name}"
      deploymentMode: "Incremental"

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: "AzureRM"
      azureSubscription: "Visual Studio Enterprise(2394ff5d-4d73-4134-a00f-2385754aeeb5)"
      appType: "functionApp"
      WebAppName: "meatgeekproxy$(UniqueResourceNameSuffix)"
      packageForLinux: "$(System.DefaultWorkingDirectory)/proxies/*.zip"
